# Maintainer: ArchStrike <team@archstrike.org>

buildarch=1

pkgname='set-git'
pkgver=7.4.1.r2.ga7eadd7
pkgrel=1
epoch=1
groups=('archstrike' 'archstrike-social-engineering' 'archstrike-exploit')
pkgdesc="Social-engineer toolkit. Aimed at penetration testing around Social-Engineering"
arch=('any')
url='https://www.trustedsec.com/downloads/social-engineer-toolkit'
license=('BSD')
makedepends=('git')
depends=('python2' 'python2-beautifulsoup3' 'python2-pexpect'
  'java-environment')
optdepends=('ettercap: DNS spoofing and ARP cache poisoning capabilities'
            'sendmail: email address spoofing'
            'python2-pefile: advanced AV evasion via hijacking a legit digital certificate'
            'apache: increase speed of web attack vectors'
            'openssl: create self-signed SSL certificates'
            'xterm: default terminal for SET command center'
            'upx: executable packer for better AV evasion'
            'aircrack-ng: rouge access point capabilities'
            'dsniff: DNS spoofing capabilities'
            'python2-cryptography: Encrypted communications'
            'metasploit: metasploit exploit payloads')
options=('!strip')
conflicts=('set')
provides=('set')
replaces=('set')
source=('git+https://github.com/trustedsec/social-engineer-toolkit/')
sha512sums=('SKIP')

pkgver() {
  cd "$srcdir/social-engineer-toolkit"
  git describe --long --tags | sed -r 's/([^-]*-g)/r\1/;s/-/./g'
}

prepare() {
  cd "$srcdir/social-engineer-toolkit"

  # Fix shebands in all se*
  sed -i -e "s|#![ ]*/usr/bin/python$|#!/usr/bin/python2|" \
      -i -e "s|#![ ]*/usr/bin/env python$|#!/usr/bin/env python2|" \
      se*

  # Fix tab-space inconsistencies.
  sed -i 's/\t/    /g' se*

  # Fix all Metasploit calls using 'ruby' and change-to 'ruby-1.9'
  grep -Rl python ./ | xargs sed -i 's|ruby|ruby-1.9|g'

  # Fix all calls to 'python-pycrypto' change to 'python2-crypto'
  grep -Rl python-pycrypto ./ | xargs sed -i 's|python-pycrypto|python2-crypto|g'

}

package() {
  cd "$srcdir/social-engineer-toolkit"

  # Base directories.
  install -dm755 "$pkgdir/usr/bin"
  install -dm755 "$pkgdir/usr/share/set"
  install -dm755 "$pkgdir/usr/share/doc/set"

  # Sharable.
  cp --no-preserve=ownership -R * "$pkgdir/usr/share/set"
  cp --no-preserve=ownership -R readme/* "$pkgdir/usr/share/doc/set"

  # Remove `setup.py`.
  rm "$pkgdir/usr/share/set/setup.py"

  # Fix shebangs in all .py files
  sed -i -e "s|/usr/bin/python$|/usr/bin/python2|" \
      -i -e "s|/usr/bin/env python$|/usr/bin/env python2|" \
      $(find "${pkgdir}" -type f)

  # Joint script to handle default configuration.
cat > "$pkgdir/usr/bin/setoolkit" << EOF
#!/usr/bin/env bash

# Make sure only root can run our script
if [[ \$EUID -ne 0 ]]; then
   echo "This script must be run as root" 1>&2
   exit 1
fi

cd /usr/share/set
./setoolkit
EOF
chmod 755 "$pkgdir/usr/bin/setoolkit"
}
